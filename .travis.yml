language: go

# USE THIS alongside makefile tag detection: $TRAVIS_TAG

go: 
 - 1.9.x       # last version
 - 1.10.x      # current version

# Speed up git clones
git:
  depth: 1


# Anything in before_script that returns a nonzero exit code will
# flunk the build and immediately stop. It's sorta like having
# set -e enabled in bash. 
before_script:
  - travis_retry sudo apt-get -qq update && sudo apt-get install -y ldap-utils oathtool  # need this for integration tests
  - travis_retry sudo apt-get -qq update && sudo apt-get install -y go-bindata           # need this for makefile
  - GO_FILES=$(find . -iname '*.go' -type f | grep -v /vendor/)             # All the .go files, excluding vendor/
  #- travis_retry go get github.com/golang/lint/golint                                   # Linter
  #- travis_retry go get honnef.co/go/tools/cmd/megacheck                                # Badass static analyzer/linter
  # - travis_retry go get github.com/fzipp/gocyclo                                       # Not sure what this is


# Run bindata for assets
  - make bindata

# Fetch dependencies
  - travis_retry go get -t -v ./...


script:
  - env                                       # Dump the env to make debugging easier
  - diff -u <(echo -n) <(gofmt -d ./)         # Fail if a .go file hasn't been formatted with 'go fmt'
  # - go vet ./...        "                     # go vet is the official Go static analyzer

  # - go test -v -race ./...                   # Run all the tests with the race detector enabled
  # - megacheck ./...                          # "go vet on steroids" + linter
  # - gocyclo -over 19 $GO_FILES               # forbid code with huge functions
  # - golint -set_exit_status $(go list ./...) # one last linter



  # Unit tests
  # - tbd - use 'go test' here when we have unit tests written. example command below. This will generate output for codecov
  # - go test -race -coverprofile=coverage.txt -covermode=atomic

  # Full compile test
  # - go build -o ./glauth glauth.go bindata.go ldapbackend.go webapi.go configbackend.go
  - make all

  # Output hashes to the build log
  - cat bin/*.sha256

  # Integration test with compiled binary
  - make test



# after_success:
#  - bash <(curl -s https://codecov.io/bash)

deploy:
  provider: releases
  api_key:
    secure: CsQb802CJJlum5suwo3Yvw1TkmX56O6TPrtJqMI0Qm6A878dhrZIjyVmfG3Iq9rtZvfFhK+Y3SIfPZp8BjV3cicc+X1Yh1VvMG12ukqHSruvGvLG49dtnq40P31u85Y4HdBk+W8YIsCQHEonsID9l+q2LbhuiC358UF+HNgzESEz6ZyTZz0AvAJzm1uyiUiPTHMFwqN7qQsookmLXf490rqp9YmFFqte+o3/JwoYXc3pE/rBMJitPSJNGULzu2QofV5gJ0JxgPWlfF5DsHHEi1jhpBcTfiFzEvkdcl1SVme9MMNPue7j8u9+PLJ6uIdlnTeBcMPKgtzOg/kBqY4+3QzY4aPXjKm3+MF3Cau66+g3QC7dKenvYefapQYN7t1SSpiR9X3TLWZrBbw2ovMe3em+uMnIM08bemzj8DapRgKXmYKWnwTlA9KLf0Vl22255OzMGarkhx94cDvUHmEkNo7qBXqmUxPo0Fc5XJyD7JmUNgYoWj0/NjyN09VG22FL2FW44HR3eitq2wSFSMO/jsC2rLuCnyLHViP+O2YJu0T4Q3gdQUcdQmjT7y8ogH5Shn9t2wY4NRxI3MyXO7+fGEOj1DaD6CFQwcSwbJVpIzS6J8z7+rRrzE9QkXeCmwNNt5UkpR9lYmOEzpc00rTRimwjfmJn/nTXsIDiQg9iZJM=
  file_glob: true 
  file: bin/*
  draft: true
  name: "DRAFT RELEASE: $TRAVIS_TAG"
  body: "Draft release, committed with message: $TRAVIS_COMMIT_MESSAGE"
  body: "# Commit Details<br />$TRAVIS_COMMIT_MESSAGE<br /><br /># Note About Non-Linux 64bit Files<br /> While I expect the code is system-independent, there is not a good (and free) CI system which can be easily used to continuously test releases on ARM, BSD, Linux-32bit, and Windows.<br /><br />As such, the primary release platform is Linux 64 bit. The extent of testing on these packages consists solely of cross-compiling for these architectures from a linux 64 bit system.<br /><br />We will accept PRs which fix bugs on these platforms, but be aware these binaries will not be tested regularly, and instead are provided for the convenience of those who feel comfortable using them with this knowledge."

  skip_cleanup: true
  on:
    branch: master
    tags: true
    condition: $TRAVIS_GO_VERSION = "1.10.1"
