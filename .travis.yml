language: go

go: 
 - 1.3.x       # Test an old version, to be sure it works
 - 1.9.x       # last version
 - 1.10.x      # current version

# Speed up git clones
git:
  depth: 1


# Anything in before_script that returns a nonzero exit code will
# flunk the build and immediately stop. It's sorta like having
# set -e enabled in bash. 
before_script:
  - GO_FILES=$(find . -iname '*.go' -type f | grep -v /vendor/) # All the .go files, excluding vendor/
  #- go get github.com/golang/lint/golint                        # Linter
  #- go get honnef.co/go/tools/cmd/megacheck                     # Badass static analyzer/linter
  # - go get github.com/fzipp/gocyclo


# Fetch dependencies
  - go get -t -v ./...


script:
  - diff -u <(echo -n) <(gofmt -d ./)         # Fail if a .go file hasn't been formatted with 'go fmt'
  # - go test -v -race ./...                   # Run all the tests with the race detector enabled
  # - go vet ./...                             # go vet is the official Go static analyzer
  # - megacheck ./...                          # "go vet on steroids" + linter
  # - gocyclo -over 19 $GO_FILES               # forbid code with huge functions
  # - golint -set_exit_status $(go list ./...) # one last linter



  # Unit tests
  # - tbd - use 'go test' here when we have unit tests written. example command below. This will generate output for codecov
  # - go test -race -coverprofile=coverage.txt -covermode=atomic

  # Full compile test
  - go build -o ./glauth glauth.go bindata.go ldapbackend.go webapi.go configbackend.go

  # Integration test with compiled binary
  - scripts/travis/integration-test.sh "scripts/travis/test-config.cfg"


# after_success:
#  - bash <(curl -s https://codecov.io/bash)
